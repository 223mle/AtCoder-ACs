{
	// Place your AtCoder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"multi int inputs":
	{
		"scope": "python",
		"prefix": "mulinput",
		"body": "map(int, input().split())",
		"description": "AtCoder multi int inputs"
	},

	"list inputs":
	{
		"scope": "python",
		"prefix": "listinput",
		"body": "list(map(int, input().split()))",
		"description": "AtCoder list inputs"
	},

	"comprehension list inputs":
	{
		"scope": "python",
		"prefix": "comlistinput",
		"body": "[input() for _ in range(n)]",
		"description": "AtCoder comprehension list inputs"
	},
	"input int n":
	{
		"scope": "python",
		"prefix": "inputn",
		"body": "n = int(input())",
		"description": "AtCoder input int n"
	},

}
